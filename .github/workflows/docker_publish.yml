name: Build and Publish Docker Image

on:
  push:
    branches:
      - main # Trigger test builds for the main branch
    tags:
      - "v*" # Trigger stable builds for version tags
  pull_request: # Run test builds on PRs
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Image Tags
        id: vars
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "image_tag=$VERSION" >> $GITHUB_ENV
          else
            echo "image_tag=latest" >> $GITHUB_ENV
          fi

          echo "repo_name=$REPO_NAME" >> $GITHUB_ENV

      - name: Build Docker Imagef
        run: |
          IMAGE_NAME=${{ env.repo_name }}:${{ env.image_tag }}
          docker build -t $IMAGE_NAME .
          docker save $IMAGE_NAME | gzip > docker-image.tar.gz

      - name: Upload Docker Image as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tar.gz

  # push-docker-hub:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Docker Image Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: docker-image

  #     - name: Load Docker Image
  #       run: |
  #         docker load < docker-image.tar.gz

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Push to Docker Hub
  #       run: |
  #         DOCKER_IMAGE=docker.io/${{ secrets.DOCKER_USERNAME }}/$(basename ${{ env.repo_name }}):${{ env.image_tag }}
  #         docker tag ${{ env.repo_name }}:${{ env.image_tag }} $DOCKER_IMAGE
  #         docker push $DOCKER_IMAGE

  push-ghcr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load < docker-image.tar.gz

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Container Registry
        run: |
          GHCR_IMAGE=ghcr.io/${{ env.repo_name }}:${{ env.image_tag }}
          docker tag ${{ env.repo_name }}:${{ env.image_tag }} $GHCR_IMAGE
          docker push $GHCR_IMAGE
